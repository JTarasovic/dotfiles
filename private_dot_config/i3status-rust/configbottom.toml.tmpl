# vi:syntax=toml

{{/* TODO: pull critical temps from sensors output */}}
{{- $sensors := fromJson "{}" -}}
{{- if lookPath "sensors" -}}
{{- $sensors = fromJson ( output "sensors" "-j" ) -}}
{{- end -}}

{{ $mouse_mac := output
    ( joinPath .chezmoi.sourceDir "helpers" "bluetooth-device-paired.sh")
    "LIFT" -}}

{{ $nc700 := output
    ( joinPath .chezmoi.sourceDir "helpers" "bluetooth-device-paired.sh")
    "Bose NC 700 Head" -}}

{{ $px7 := output
    ( joinPath .chezmoi.sourceDir "helpers" "bluetooth-device-paired.sh")
    "PX7 Bowers & Wilkins" -}}


[theme]
theme = "nord-dark"
[theme.overrides]
separator = ""

[icons]
icons = "material-nf"

{{ if $nc700 -}}
[[block]]
block = "bluetooth"
mac = {{ $nc700 | quote }}
# format = "Bose NC700 {percentage}"
# format_unavailable = "Bose NC700 x"
{{- else -}}
# skipped Bose NC700
{{- end }}

{{ if $px7 -}}
[[block]]
block = "bluetooth"
mac = {{ $px7 | quote }}
# format = " $icon B&W PX7{ $percentage|} "
# disconnected_format = " $icon{ B&W PX7|} "
{{- else -}}
# skipped PX7
{{- end }}


{{ if $mouse_mac -}}
[[block]]
block = "bluetooth"
mac = {{ $mouse_mac|quote }}
{{- else -}}
# skipped mouse
{{- end }}

[[block]]
block = "custom"
command = "echo '|'"
interval = "once"

[[block]]
block = "disk_space"
path = "/"
format = " $icon / {$free} "
info_type = "available"
warning = 20.0
alert = 10.0
interval = 120
alert_unit = "GB"

[[block]]
block = "docker"
format = " $icon T:{$total} R:{$running} S:{$stopped} P:{$paused} I:{$images} "
interval = 60

{{ if ( get $sensors "nvme-pci-0400" ) -}}
[[block]]
block = "temperature"
chip = "nvme-pci-0400"
good = 20
idle = 30
info = 60
warning = 70
format = " $icon / {$max} "
interval = 5
{{- else -}}
# skipped nvme-pci-0400
{{- end }}

[[block]]
block = "custom"
command = "echo '|'"
interval = "once"

[[block]]
block = "disk_space"
path = "/home"
format = " $icon ~ {$free} "
info_type = "available"
warning = 20.0
alert = 10.0
alert_unit = "GB"
interval = 120

{{ $dockerSock := output (joinPath .chezmoi.sourceDir "helpers" "docker-sock-exists.sh") -}}
{{ if $dockerSock -}}
[[block]]
block = "docker"
format = " $icon T:{$total} R:{$running} S:{$stopped} P:{$paused} I:{$images} "
interval = 60
socket_path = "{{ $dockerSock }}"
{{- end }}

{{ if ( get $sensors "nvme-pci-0100" ) -}}
[[block]]
block = "temperature"
chip = "nvme-pci-0100"
good = 20
idle = 30
info = 60
warning = 70
format = " $icon ~ {$max} "
interval = 5
{{- else -}}
# skipped nvme-pci-0100
{{- end }}

[[block]]
block = "custom"
command = "echo '|'"
interval = "once"

[[block]]
block = "memory"
# display_type = "memory"
format = " $icon {$mem_free.eng(p:G)} "
format_alt = " $icon_swap {$swap_free.eng(p:G)} "
interval = 5

[[block]]
block = "custom"
command = "echo '|'"
interval = "once"

[[block]]
block = "net"
format=" $icon {$speed_down.eng(w:3,p:M)} {$speed_up.eng(w:3,p:M)} "
interval = 5

{{ if ( get $sensors "iwlwifi_1-virtual-0" ) -}}
[[block]]
block = "temperature"
chip = "iwlwifi_1-virtual-0"
good = 10
idle = 20
info = 65
warning = 70
format = "  {$max} "
interval = 5
{{- else -}}
# skipped iwlwifi_1
{{- end }}

[[block]]
block = "custom"
command = "echo '|'"
interval = "once"

[[block]]
block = "amd_gpu"
format_alt = " $icon MEM: $vram_used_percents ($vram_used/$vram_total) "

{{ if ( get $sensors "amdgpu-pci-0c00" ) -}}
[[block]]
block = "temperature"
chip = "amdgpu-pci-0c00"
inputs = [ 'edge' ]
good = 20
idle = 40
info = 70
warning = 75
format = "󰍹 {$max} "
interval = 5
{{- else -}}
# skipped amdgpu
{{- end }}

[[block]]
block = "custom"
command = "echo '|'"
interval = "once"

[[block]]
block = "load"
format = " $icon {$1m.eng(w:4)} {$5m.eng(w:4)} "
interval = 5

[[block]]
block = "cpu"
format=" $icon{$frequency.eng(w:2)} {$barchart} "
interval = 5

{{ if ( get $sensors "k10temp-pci-00c3" ) -}}
[[block]]
block = "temperature"
chip = "k10temp-pci-00c3"
inputs = [ 'Tctl' ]
good = 20
idle = 30
info = 75
warning = 80
format = "  {$max} "
interval = 5
{{- else -}}
# skipped k10temp
{{- end }}
